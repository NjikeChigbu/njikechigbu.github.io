mapboxgl.accessToken =
  "pk.eyJ1Ijoibmppa2VjIiwiYSI6ImNscmdmdmZqcTAxb2kyam1rNTl1N2wzemgifQ.66TD2YnVptsfg1ybTTn4jg";

const map = new mapboxgl.Map({
  container: "map",
  style: "mapbox://styles/njikec/cly5rqtjl005d01pfdtz5gjkr",
  center: [7.354, 5.1196],
  zoom: 12
});

map.addControl(
  new mapboxgl.NavigationControl({
    position: "bottom-left" // Adjusted control position
  })
);

map.on("load", () => {
  // Highlight feature source
  map.addSource("highlight-feature", {
    type: "geojson",
    data: {
      type: "FeatureCollection",
      features: []
    }
  });

  // Highlight feature layer
  map.addLayer({
    id: "highlight-feature",
    type: "circle",
    source: "highlight-feature",
    paint: {
      "circle-radius": 10,
      "circle-color": "rgba(255, 255, 0, 0.7)", // Yellow with 70% opacity
      "circle-opacity": 0.7
    }
  });

  // Filling stations click handling
  map.on("click", (event) => {
    const features = map.queryRenderedFeatures(event.point, {
      layers: ["fillingstationsaba"] // Replace with your filling stations layer name
    });

    if (features.length) {
      const feature = features[0];

      map.getSource("highlight-feature").setData({
        type: "FeatureCollection",
        features: [feature]
      });

      new mapboxgl.Popup({
        offset: [0, -10],
        className: "my-popup"
      })
        .setLngLat(feature.geometry.coordinates)
        .setHTML(
          `<h3>${feature.properties.Name}</h3><p>Risk Score Category: ${feature.properties.RScoreCat}</p><p>Percentage Compliance (DPR): ${feature.properties.PctComply}%</p>`
        )
        .addTo(map);
      return; // Exit if a filling station is clicked
    }

    // Emergency services click handling
    const emergencyFeatures = map.queryRenderedFeatures(event.point, {
      layers: ["emergencyservices"] // Replace with your emergency services layer name
    });

    if (!emergencyFeatures.length) {
      return;
    }

    const emergencyFeature = emergencyFeatures[0];

    map.getSource("highlight-feature").setData({
      type: "FeatureCollection",
      features: [emergencyFeature]
    });

    new mapboxgl.Popup({
      offset: [0, -10],
      className: "my-popup"
    })
      .setLngLat(emergencyFeature.geometry.coordinates)
      .setHTML(
        `<h3>Emergency Services</h3><p>Type: ${emergencyFeature.properties.Type}</p><p>Description: ${emergencyFeature.properties.Description}</p>`
      )
      .addTo(map);
  });

  const geolocateBtn = document.getElementById("geolocateBtn");
  geolocateBtn.addEventListener("click", () => {
    if (!navigator.geolocation) {
      alert("Geolocation is not supported by your browser");
    } else {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const lngLat = [position.coords.longitude, position.coords.latitude];

          new mapboxgl.Marker({ color: "#3FB1CE" })
            .setLngLat(lngLat)
            .addTo(map);

          map.flyTo({
            center: lngLat,
            zoom: 15
          });
        },
        () => {
          alert("Unable to retrieve your location");
        }
      );
    }
  });
});
